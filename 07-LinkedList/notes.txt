------------------------------------NODES---------------------------------------
n -> [STRING|next{}]
        v      v
     [hello]   n2 > [STRING|next{}]
                       v
                    [world]

if you want to add a start node and have n refer to it:
Node tmp = new Node("start");
tmp.setNext(n);
tmp = n;

Then tmp is set to start of list, n becomes tmp

To loop through a linked list:
Node Tmp = n;
while (tmp!=null){
    blahblahblah
Tmp = Tmp.getNext();}

--------------------------ELIMINATE BORDER CASE PROBLEM-------------------------
can change situation so :
  - 0 elements : L > DummyNode
  - 1 element :  L > DummyNode > Node1
  - 2 elements : L > DummyNode > Node1 > Node2
Assignment :
  - empty list has a dummy node
  - keep track of length in an instance variable
  - add(String) still adds to front
  - add(index, String) (rename insert)
  - rename find to get
  - remove(index)
