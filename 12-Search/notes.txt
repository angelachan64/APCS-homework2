-------------------------------BEST FIRST SEARCH--------------------------------
use a priority queue using the distance as the priority
- when you add each node to the frontier, first assign a priority and then add
  to the frontier which is a priority queue (ordered list)
- much quicker and more efficient to run
maze herristics
- euclidean distance formula (easy)
- manhattan (taxi cab) distance
-----------------------------------A* SEARCH------------------------------------
the priority of Node n is the cost to get to node n + estimated distance to goal
- used by self driving cars
----------------------------------ASSIGNMENT------------------------------------
best first search
- priority = estimate to exit
  - implement add/remove as a priority queue
  - modify node to add priority
1.) euclidean distance 
2.) manhattan distance
3.) A* distance (priority: number of steps so far + estimate to exit)
    - track steps taken
